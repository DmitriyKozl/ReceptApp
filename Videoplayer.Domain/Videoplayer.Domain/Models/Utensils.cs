using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using VideoplayerProject.Domain.Exceptions;

namespace VideoplayerProject.Domain.Models; 

public class Utensils {
    // Parameterless constructor for Entity Framework
    public Utensils() { }

    // Constructor to be used when creating a new utensils
    public Utensils(string name) {
        // Validation moved to the constructor to ensure the entity is never created in an invalid state
        if (string.IsNullOrEmpty(name)) {
            throw new UtensilException("Please enter a Utensils name");
        }

        UtensilName = name;
    }

    [Key]
    [Column("UtensilID")]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Ensures the ID is generated by the database when the object is inserted
    public int UtensilId { get;  set; } // Made setter private to prevent the ID from being changed arbitrarily

    private string _name;

    [Required] // Data annotation indicating that the name is required
    public string UtensilName {
        get { return _name; }
        set 
        {
            if (!string.IsNullOrEmpty(value)) {
                _name = value;
            }
            else {
                throw new UtensilException("Please enter a Utensils name");
            }
        }
    }

    // Method to update the name, ensuring the same validation is applied
    public void UpdateName(string newName) {
        UtensilName = newName; // The setter still performs validation
    }

    public ICollection<RecipeUtensil> RecipeUtensils { get; set; } = new List<RecipeUtensil>();
}